networks:
  metabase_net:
  ogna:
    external: true
  databases:
    external: true

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/volume-db/metabase/postgress
      o: bind

services:
  metabase:
    image: metabase/metabase:latest
    hostname: metabase
    env_file:
      - .env
    volumes:
      - /dev/urandom:/dev/random:ro
    expose:
      - 3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${POSTGRES_DB}
      MB_DB_PORT: 5432
      MB_DB_USER: ${POSTGRES_USER}
      MB_DB_PASS: ${POSTGRES_PASSWORD}
      MB_DB_HOST: postgres_metabase
    networks:
      - ogna
      - metabase_net
      - databases
    healthcheck:
      test: curl --fail -I http://metabase:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      postgres_metabase:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.metabase.rule=Host(`metabase.${OGNA_USER}.${OGNA_HOST}`)"
      - "traefik.http.routers.metabase.entrypoints=websecure"
      - "traefik.http.routers.metabase.tls.certresolver=hetzner"
      - "traefik.http.services.metabase.loadbalancer.server.port=3000"
      - "traefik.docker.network=ogna"

  postgres_metabase:
    hostname: postgres_metabase
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - metabase_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    restart: unless-stopped
    env_file:
      - .env
